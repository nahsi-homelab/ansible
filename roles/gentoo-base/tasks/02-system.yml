- name: set timezone
  copy:
    content: "{{ base_timezone }}"
    dest: /etc/timezone
    owner: root
    group: root
    mode: 0644
  notify: update timezone

- name: update locales
  copy:
    content: |
      {% for locale in base_locales %}
      {{ locale }}
      {% endfor %}
    dest: /etc/locale.gen
    owner: root
    group: root
    mode: 0644
  notify: update locales

- name: set hostname
  hostname:
    name: "{{ inventory_hostname }}"
    use: openrc

- meta: flush_handlers

- name: setup hwclock
  copy:
    content: |
      {% for key, value in base_hwclock.items() %}
      {{ key }}="{{ value }}"
      {% endfor %}
    dest: /etc/conf.d/hwclock
    owner: root
    group: root
    mode: 0644

- name: copy rc.conf
  copy:
    content: |
      {% for key, value in base_openrc.items() %}
      {{ key }}="{{ value }}"
      {% endfor %}
    dest: /etc/rc.conf
    owner: root
    group: root
    mode: 0644

- name: install openresolv
  portage:
    package: net-dns/openresolv
    state: present

- name: configure openresolv
  copy:
    content: |
      resolv_conf=/etc/resolv.conf
      {% for key, value in base_dns.items() %}
      {{ key }}="{{ value }}"
      {% endfor %}
    dest: /etc/resolvconf.conf
    owner: root
    group: root
    mode: 0644
  notify: run resolvconf

- name: install base packages
  portage:
    package: "{{ item }}"
    state: present
  loop: "{{ base_packages }}"

- name: enable cronie
  service:
    name: cronie
    enabled: yes
    runlevel: default
    use: openrc

- name: set env vars with eselect
  eselect:
    module: "{{ item.key }}"
    target: "{{ item.value }}"
  loop: "{{ base_env | dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  notify: update env

- name: add doas rules
  copy:
    content: >
      permit nopass :wheel
    dest: /etc/doas.conf
    owner: root
    group: root
    mode: 0644

- name: set terminus as default consolefont
  copy:
    content: >
      consolefont={{ base_consolefont }}
    dest: /etc/conf.d/consolefont

- name: enable services
  service:
    name: "{{ item.key }}"
    enabled: yes
    runlevel: "{{ item.value }}"
    use: openrc
  loop: "{{ base_services | dict2items }}"
  loop_control:
    label: "{{ item.key }}"

- name: mount filesystems
  mount:
    src: "{{ fs.src }}"
    opts: "{{ fs.opts }}"
    path: "{{ fs.path }}"
    fstype: "{{ fs.type }}"
    state: mounted
  loop: "{{ base_filesystems }}"
  loop_control:
    loop_var: fs
    label: "{{ fs.path }}"

- name: set swappiness to "1"
  sysctl:
    name: vm.swappiness
    value: "1"
    state: present

- meta: flush_handlers
