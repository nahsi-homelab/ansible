telegraf_version: "1.22.3"
telegraf_checksum: "613a6b36c0442455c17743fdc7c36d0bb1b62be7efb9a41a4645054e7eab6f9b"

telegraf_config: |
  [agent]
    interval = "5s"
    round_interval = true
    metric_batch_size = 10000
    metric_buffer_limit = 100000
    collection_jitter = "1s"
    flush_interval = "5s"
    flush_jitter = "0s"
    precision = ""
    ## Override default hostname, if empty use os.Hostname()
    hostname = ""
    ## If set to true, do no set the "host" tag in the telegraf agent.
    omit_hostname = true

    logtarget = "file"
    logfile = "/var/log/telegraf/telegraf.log"
    logfile_rotation_interval = 0
    logfile_rotation_max_size = "50MB"
    logfile_rotation_max_archives = 3

  [[inputs.internal]]

telegraf_configs_all:
  output: |
    [[outputs.prometheus_client]]
      listen = "{{ private_ip }}:9271"
      metric_version = 2
      path = "/metrics"
      expiration_interval = "15s"

    [[outputs.health]]
      service_address = "http://127.0.0.1:9270"

  docker: |
    [[inputs.docker]]
      endpoint = "unix:///var/run/docker.sock"
      gather_services = false
      source_tag = false
      perdevice = false
      total = true
      total_include = ["cpu", "blkio", "network"]

      # docker_label_include = []
      docker_label_exclude = ["*"]

  consul: |
    [[inputs.consul]]
      metric_version = 2
      tag_delimiter = "="
      [inputs.consul.tags]
        dc = "oikumene"

  system: |
    [[inputs.system]]
    [[inputs.cpu]]
    [[inputs.mem]]
    [[inputs.swap]]
    [[inputs.kernel]]
    [[inputs.kernel_vmstat]]
    [[inputs.processes]]

    [[inputs.net]]
    interfaces = ["eth*", "enp*", "ppp*", "relay", "docker0", "nomad"]
    [[inputs.netstat]]

    [[inputs.disk]]
      ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]
      [inputs.disk.tagdrop]
      path = ["/var/lib/docker/zfs/graph/*"]

    [[inputs.diskio]]
      [inputs.diskio.tagdrop]
      device = ["*/containers/*"]

  smart: |
    [[inputs.smart]]
      attributes = true

  system-info: |
    [[inputs.execd]]
      command = ["/opt/telegraf/script.d/info.sh"]
      signal = "STDIN"

telegraf_configs: "{{ telegraf_configs_all }}"

telegraf_scripts_all:
  info: |
    #! /usr/bin/env bash

    kernel_release() {
      local out="$(uname -r)"
      echo "$out"
    }

    cpu_model() {
      local out="$(grep -m 1 'model name' /proc/cpuinfo)"
      local out="${out#*: }"
      local out="${out//,/_}"
      echo "${out// /_}"
    }

    emit() {
    cat<<EOF
    system,dc={{ dc }},kernel_release=$(kernel_release),cpu_model=$(cpu_model) info=1
    EOF
    }

    while IFS= read -r LINE; do
      emit
    done

telegraf_scripts: "{{ telegraf_scripts_all }}"
