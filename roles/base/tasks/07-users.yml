- name: create "ansible-managed" group
  tags: users
  group:
    name: ansible-managed
    state: present
    system: true

- name: add users
  tags: users
  user:
    name: "{{ user.name }}"
    comment: "{{ user.comment | default('') }}"
    create_home: "{{ user.create_home | default('true') }}"
    system: "{{ user.system | default('false') }}"
    groups: "{{ user.groups | default([]) }}"
    uid: "{{ user.uid | default(omit) }}"
    append: "{{ user.append | default(true) }}"
  loop: "{{ base_users }}"
  loop_control:
    loop_var: "user"
    label: "{{ user.name }}"

- name: add users to "ansible-managed" group
  tags: users
  user:
    name: "{{ user.name }}"
    groups: "ansible-managed"
    append: true
  loop: "{{ base_users }}"
  loop_control:
    loop_var: "user"
    label: "{{ user.name }}"

- name: add ssh keys
  tags: users
  authorized_key:
    user: "{{ user.name }}"
    key: "{{ user.ssh }}"
    exclusive: true
  loop: "{{ base_users }}"
  loop_control:
    loop_var: user
    label: "{{ user.name }}"
  when:
    - user.ssh is defined
    - user.ssh | length

- name: cleanup users not present in "base_users"
  tags: users
  block:
    - name: get list of users from "ansible-managed" group
      getent:
        database: "group"
        key: "ansible-managed"
        split: ":"

    - name: delete users
      vars:
        _users: "{{ base_users | json_query('[*].name') }}"
        _existing_users: "{{ getent_group['ansible-managed'][-1].split(',') }}"
      user:
        name: "{{ user }}"
        state: absent
      loop: "{{ _existing_users | difference(_users) }}"
      loop_control:
        loop_var: "user"
