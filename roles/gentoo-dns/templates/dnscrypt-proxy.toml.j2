#jinja2: trim_blocks: True, lstrip_blocks: True
# {{ ansible_managed }}
listen_addresses = {{ dns_dnscrypt_listen | to_json }}

{% for key, value in dns_dnscrypt_options.items() %}
{{ key }} = {{ value | to_json }}
{% endfor %}

{% if dns_dnscrypt_routes is defined %}
[anonymized_dns]
routes = [
{% for route in dns_dnscrypt_routes %}
  { {%- for k, v in route.items() -%}
  {{ k }} = {{ v | to_json }}{{ ", " if not loop.last }}
  {%- endfor -%} }
{% endfor %}
]
skip_incompatible = true
{% else %}
server_names = {{ dns_dnscrypt_servers | to_json }}
{% endif %}

{%- if dns_dnscrypt_blacklist | length %}
{% for key, value in dns_dnscrypt_blacklist %}
{{ key }} = {{ value | to_json }}
{% endfor %}
{% endif %}

{%- if dns_dnscrypt_ip_blacklist | length %}
{% for key, value in dns_ip_dnscrypt_blacklist %}
{{ key }} = {{ value | to_json }}
{% endfor %}
{% endif %}

{%- if dns_dnscrypt_whitelist | length %}
{% for key, value in dns_dnscrypt_whitelist %}
{{ key }} = {{ value | to_json }}
{% endfor %}
{% endif %}

[sources]
{% for __name, __source in dns_dnscrypt_sources.items() %}
  [sources."{{ __name }}"]
  {% for key, value in __source.items() %}
  {{ key }} = {{ value | to_json }}
  {% endfor %}
{% endfor %}

{%- if dns_dnscrypt_static | length -%}
[static]
{% for __name, __options in dns_dnscrypt_static.items() %}
  [static.'{{ __name }}']
  {% for key, value in __options.items() %}
  {{ key }} = {{ value  }}
  {% endfor %}
{% endfor %}
{% endif %}

[broken_implementations]

fragments_blocked = ["cisco", "cisco-ipv6", "cisco-familyshield", "cisco-familyshield-ipv6", "quad9-dnscrypt-ip4-filter-alt", "quad9-dnscrypt-ip4-filter-pri", "quad9-dnscrypt-ip4-nofilter-alt", "quad9-dnscrypt-ip4-nofilter-pri", "quad9-dnscrypt-ip6-filter-alt", "quad9-dnscrypt-ip6-filter-pri", "quad9-dnscrypt-ip6-nofilter-alt", "quad9-dnscrypt-ip6-nofilter-pri", "cleanbrowsing-adult", "cleanbrowsing-family-ipv6", "cleanbrowsing-family", "cleanbrowsing-security"]
