- name: download nomad to localhost
  become: false
  run_once: true
  delegate_to: localhost
  get_url:
    url: "{{ __archive_url }}"
    dest: "/tmp/{{ __archive }}"
    checksum: "sha256:{{ __archive_checksum }}"
  register: __download_archive
  until: __download_archive is succeeded
  retries: 5
  delay: 2

- name: create nomad directories
  file:
    path: "{{ dir.value.path }}"
    state: directory
    owner: root
    group: "{{ dir.group | default('root')}}"
    mode: "{{ dir.value.mode | default(0740) }}"
  loop: "{{ nomad_dirs | dict2items }}"
  loop_control:
    loop_var: dir
    label: "{{ dir.key }}"

- name: create nomad archive directory
  become: false
  delegate_to: localhost
  file:
    path: "{{ __archive_dir }}"
    state: directory
    mode: 0755

- name: unpack nomad
  become: false
  delegate_to: localhost
  unarchive:
    src: "/tmp/{{ __archive }}"
    dest: "{{ __archive_dir }}"

- name: propagate nomad binary
  copy:
    src: "{{ __archive_dir }}/nomad"
    dest: "/usr/local/bin/nomad"
    owner: root
    group: root
    mode: 0555
  notify:
    - restart nomad

- name: create nomad unitfile
  template:
    src: nomad.service.j2
    dest: "/usr/lib/systemd/system/nomad.service"
    owner: root
    group: root
    mode: 0640
  when: ansible_service_mgr == "systemd"
  notify:
    - daemon reload
    - restart nomad

- name: create nomad initfile
  template:
    src: nomad.initd.j2
    dest: "/etc/init.d/nomad"
    owner: root
    group: root
    mode: 0740
  when: ansible_service_mgr == "openrc"
  notify:
    - restart nomad

- name: create nomad configuration
  copy:
    content: "{{ nomad_config | to_nice_json(indent=2) }}"
    dest: "{{ nomad_dirs.configs.path }}/nomad.json"
    owner: root
    group: root
    mode: 0640
  notify: restart nomad

- name: create nomad agent configuration
  copy:
    content: "{{ nomad_client_config | to_nice_json(indent=2) }}"
    dest: "{{ nomad_dirs.configs.path }}/client.json"
    owner: root
    group: root
    mode: 0640
  when: nomad_client_config | length
  notify: restart nomad

- name: create nomad server configuration
  copy:
    content: "{{ nomad_server_config | to_nice_json(indent=2) }}"
    dest: "{{ nomad_dirs.configs.path }}/server.json"
    owner: root
    group: root
    mode: 0640
  when: nomad_server_config | length
  notify: restart nomad

- name: enable nomad
  service:
    name: nomad
    enabled: yes
